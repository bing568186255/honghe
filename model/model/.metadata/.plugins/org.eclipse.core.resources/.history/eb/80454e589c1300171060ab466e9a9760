/*
 * config:
 * 		label
 *		labelWidth: default 60
 * 		name: string or array
 * 		value: optional,matched to name for no select
 * 		display: array,only for select
 * 		default: default value,used to select or radio or checkbox(array)
 * 		onchange: changed event callback function
 * 		type
 * 		class
 * set:
 * 		focus
 * 		value: string or array
 * get:
 * 		value: string or array
 */
$(function(){
	var jsPath = getJSPath("labelinput.js");
	$("<link>").attr(
		{
			rel: "stylesheet",
			type: "text/css",
			href: jsPath + "labelinput.css"
		}
	).appendTo("head");
});
function LabelinputModule(){
	this.name = "labelinput";
	this.config = function(cfg){
		this.para=cfg;
		if (null == this.para["type"] || undefined == this.para["type"]
			|| '' == this.para["type"])
			this.para["type"] = "text";
		if (null == this.para["class"] || undefined == this.para["class"])
			this.para["class"] = "";
		if (null != this.para["id"] && undefined != this.para["id"])
			this.id=this.para["id"];
		return this;
	};
	this.initDom = function(){
		if (null != this.mydom)
			return;
		var $html = $('<span class="LabelinputModule ' + this.para["class"] + '"></span>');
		if (this.id != '')
			$html.attr('id',this.id);
		if (null != this.para["label"] && undefined != this.para["label"]){
			var lb = $('<div class="name">'+this.para["label"]+'</div>');
			if (null != this.para["labelWidth"] && undefined != this.para["labelWidth"])
				lb.css('width',this.para["labelWidth"]);
			$html.append(lb);
		}
		if ("select" == this.para["type"]){
			var $sel = $('<select></select>');
		}else if ("radio" == this.para["type"]){
		}else if ("checkbox" == this.para["type"]){
		}else{
			if(this.para["name"] instanceof Array){
				for(var i=0;i<this.para["name"].length;i++){
					var value ="";
					if (null != this.para["value"][i] && undefined != this.para["value"][i])
						value = this.para["value"][i];
					$html.append('<input type="'+this.para["type"]
						+'" name="'+this.para["name"][i]
						+'" value="'+value
						+'"/>'
					);
				}
			}else{
				var value ="";
				if (null != this.para["value"] && undefined != this.para["value"])
					value = this.para["value"];
				$html.append('<input type="'+this.para["type"]
					+'" name="'+this.para["name"]
					+'" value="'+value
					+'"/>'
				);
			}
		}
		this.mydom = $html;
	};
	this.render = function(dom){
		this.initDom();
		if (null == this.mydom)
			return;
		this.setParent(dom);
		if (null != this.parent)
			this.mydom.appendTo(this.parent);
		return this;
	};
	this.set = function(name,value){
		if (name == "focus")
			this.mydom.find('input').eq(0).focus();
		else if (name=="value")
			this.mydom.find('input[type=text]').val(value);
		return this;
	};
	this.get=function(name){
		if (name=="value")
			return this.mydom.find('input[type=text]').val();
	};
}
LabelinputModule.prototype = new Module();
