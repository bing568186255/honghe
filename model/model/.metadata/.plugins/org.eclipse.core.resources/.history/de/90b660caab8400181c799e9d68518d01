<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<%@ include file="global.jsp" %>
<title>位置和多边形区域设置</title>

<style type="text/css">
	#searchresult{
		background: #FFF;
		width: 300px;
		padding: 7px 7px;
		margin-top: 10px;
		overflow: auto;
		display: none;
	}
	#searchresult div.searchresult-item{
		margin-left: 5px;
		margin-top: 5px;
		cursor: pointer;
	}
	#searchresult div.searchresult-item.active{
		background: #ddddFF;
	}
	#searchresult div.searchresult-item div.item-icon{
		float: left;
		width: 16px;
		height: 32px;
		background: url(images/circle-blue-16.png) center 3px no-repeat;
		margin-right: 5px;
	}
	#searchresult div.searchresult-item div.item-name{
		font-size: 1em;
		line-height: 1.4em;
	}
	#searchresult div.searchresult-item div.item-addr{
		font-family: "宋体";
		font-size: 0.6em;
	}
</style>

</head>

<body>
    <div id="container" class="container" tabindex="0"></div>
    <div id="lefttop">
    	<div id="buttonsDiv">
    		<span
		    	<c:if test="${selType!=0}">
		    	style="display:none;" 
		    	</c:if>
    		>
		    	<input type="radio" name="locatetype" id="locatetype0"
		    	<c:if test="${selType==0 || selType==1}"> 
		    	checked="checked"
		    	</c:if>
		    	/><label class="forcheck" for="locatetype0">选择位置</label>
		    	<input type="radio" name="locatetype" id="locatetype1"
		    	<c:if test="${selType==2}"> 
		    	checked="checked"
		    	</c:if>
		    	/><label class="forcheck" for="locatetype1">选择区域</label>
	    	</span>
	    	<span class="button" id="startSel" onclick="startSelect()">选择</span>
	    	<span class="button" id="editPolygon" onclick="editPolygon()" style="display:none;">编辑区域</span>
	    	<span class="button" onclick="save()">保存</span>
    	</div>
    	<div style="margin-top: 10px">
    		<input type="text" id="searchText" placeholder="地址、小区名称、建筑名称" style="width:300px;"/>
	    	<span class="button" onclick="search()">搜索</span>
    	</div>
    	<div id="searchresult">
    	<!--
    		<div class="searchresult-item" index="0">
    			<div class="item-icon"></div>
    			<div class="item-name">上海火车站</div>
    			<div class="item-addr">静安区秣陵路303号</div>
    		</div>
    	-->
    	</div>
    </div>
</body>

<script language="JavaScript">
var placeSearch = null;
var g_startSel = false;
var g_markers=[];
var g_areaPolygon = null;
var g_otherMassifPolygon = [];
var g_curSeled = null;
var g_type = '';
var g_status = 0;			//1 select; 2 edit polygon
var g_bSelPoint = false;
var g_polygonEditor = null;
var g_objType = '${objType}';
var g_objID = '${objID}';
var g_projID = '${projID}';
$(function(){
	amapinit({
		type:"2D",
		show:"depart",
		domIDName:"container",
		clickfun:mapClick,
		complete:mapLoaded
	});
	
	$('#searchresult').on('click','div.searchresult-item',function(){
		$('#searchresult div.searchresult-item').each(function(){
			$(this).removeClass('active');
			var index = parseInt($(this).attr('index'));
			if (isNaN(index) || g_markers.length <= index)
				return;
			g_markers[index].setTop(false);
			g_markers[index].setIcon("images/circle-blue-16.png");
		});
		$(this).addClass('active');
		var index = parseInt($(this).attr('index'));
		if (isNaN(index) || g_markers.length <= index)
			return;
		g_markers[index].setTop(true);
		g_markers[index].setIcon("images/circle-red-16.png");
		g_map.setCenter(g_markers[index].getPosition());
	});
});

function mapLoaded(){
	AMap.plugin('AMap.Autocomplete',function(){
		var autoOptions = {
		    city: "昆明",
		    input:"searchText"
		};
		autocomplete= new AMap.Autocomplete(autoOptions);
	});
	AMap.service('AMap.PlaceSearch',function(){
	    placeSearch= new AMap.PlaceSearch({
	    	city:"昆明",
	    	citylimit: true,
	    	type:"汽车服务|汽车销售|汽车维修|摩托车服务|餐饮服务|购物服务|生活服务|体育休闲服务|医疗保健服务|住宿服务|风景名胜|商务住宅|政府机构及社会团体|科教文化服务|交通设施服务|金融保险服务|公司企业|道路附属设施|地名地址信息|公共设施",
	    	pageSize: 20,
	    	pageIndex: 1
	    });
	});	
	AMap.plugin("AMap.PolyEditor");
	
	if (null != g_projID && g_projID.length > 0){
		//如果是地块，先要读取所属的项目多边形
		$.ajax({
			type : "post",
			url : '${urlhead}/ajax.html?ajax=getLocation',
			dataType : 'json',
			data: {'objtype':'area','objid':g_projID},
			timeout : 10000,
			success : function(msg, status) {
				if (msg.status == 200) {
					if (null != msg.data){
						if (msg.data.iLocType==2){
							var pts = eval('('+msg.data.cPolygon+')');
							g_areaPolygon = new AMap.Polygon({
						        path: pts,			//设置多边形边界路径
						        strokeColor: '#F00', //线颜色
						        strokeOpacity: 0.3, 	//线透明度
						        strokeWeight: 2,    //线宽
						        fillColor: '#F00', 	//填充色
						        fillOpacity: 0.1,	//填充透明度
						        bubble: true
						    });
							g_areaPolygon.setMap(g_map);
							
							g_map.setFitView();
							
							//读取此项目中已有的地块，除了编辑的地块之外
							readOtherMassif();
							
							readAlreadyLocation();
						}else{
							noArea();
						}
					}else{
						noArea();
					}
				}else{
					showError(msg.msg);
				}
			},
			error: function(){
				showError('网络访问失败！');
			}
		});	
	}else{
		readAlreadyLocation();
	}
}

function noArea(){
	showError("所属项目还没有设置区域，请先设置项目区域");
	$('#buttonsDiv').hide();
}

function readOtherMassif(){
	$.ajax({
		type : "post",
		url : '${urlhead}/ajax.html?ajax=getMassif',
		dataType : 'json',
		data: {'projid': g_projID},
		timeout : 10000,
		success : function(msg, status) {
			if (msg.status == 200) {
				if (null != msg.rows){
					for(var i=0;i<msg.rows.length;i++){
						var data = msg.rows[i];
						if (data.cObjID != g_objID)
							showMassifPolygon(data);
					}
				}
			}else{
				showError(msg.msg);
			}
		},
		error: function(){
			showError('网络访问失败！');
		}
	});	
}
function showMassifPolygon(data){
    var strokeOpacity = 0.8; 	//线透明度
    var strokeWeight = 2;    	//线宽
    var fillOpacity = 0.35;		//填充透明度
	var pts = eval('('+data.cPolygon+')');
	var center = getCenter(pts);
    data["center"]=center;
    
    var color = '#000000';
    var type = data.cCategory;
    var colorIndex = 0;
	for(var t=0;t<typeColors.length;t++){
		if (type == typeColors[t].type){
			colorIndex = typeColors[t].colorno;
			break;
		}
	}
	if (colorIndex>0 && colorIndex < colorIndexes.length){
		color = getIndexColor(colorIndex);
	}
    var  polygon = new AMap.Polygon({
        path: pts,			//设置多边形边界路径
        strokeColor: color, //线颜色
        strokeOpacity: strokeOpacity, 	//线透明度
        strokeWeight: strokeWeight,    	//线宽
        fillColor: color, 	//填充色
        fillOpacity: fillOpacity,		//填充透明度
        bubble: true,
        extData: data
    });
    polygon.setMap(g_map);
	g_otherMassifPolygon.push(polygon);

    polygon.on('click',function(){
    	var info = this.getExtData();
		var html=[];
		html.push('<div class="infowindow">'); 		
		html.push('<div class="infotitle">'+info.cMassifName+'</div>');
		html.push('<div class="infoline">地块用途：');
		html.push(info.cUsage);
		html.push('</div>');
		html.push('<div class="infoline">地块面积：');
		html.push(info.fAcreage+' 亩');
		html.push('</div>');
		html.push('<div class="infoline">开始日期：');
		html.push(info.dtStart);
		html.push('</div>');
		html.push('</div>');
    	showInfoWindow(info.center,html.join(''));
    });
    polygon.on('rightclick',function(){});
    
	var showName = new AMap.Text({
        text: data.cMassifName,
        textAlign:'center', // 'left' 'right', 'center',
        verticalAlign:'middle', //middle 、bottom
        draggable:false,
        cursor:'pointer',
        style:{
            'background':'transparent',
	           'border':'none',
	           'color':'white',
            'padding':'0px 0px',
            'font-size': '8px'
        },
        bubble: false,
        position: center
    });
    showName.setMap(g_map);
}

function readAlreadyLocation(){
	$.ajax({
		type : "post",
		url : '${urlhead}/ajax.html?ajax=getLocation',
		dataType : 'json',
		data: {'objtype':g_objType,'objid':g_objID},
		timeout : 10000,
		success : function(msg, status) {
			if (msg.status == 200) {
				if (null != msg.data){
					if (msg.data.iLocType==2){
						var pts = eval('('+msg.data.cPolygon+')');
						var polygon = new AMap.Polygon({
					        path: pts,			//设置多边形边界路径
					        strokeColor: '#00F', //线颜色
					        strokeOpacity: 1, 	//线透明度
					        strokeWeight: 2,    	//线宽
					        fillColor: '#00F', 	//填充色
					        fillOpacity: 0.3,		//填充透明度
					        bubble: false
					    });
						polygon.setMap(g_map);
						drawOver(polygon);
						$('#locatetype0').removeAttr('checked');
						$('#locatetype1').attr('checked','checked');
						
						g_map.setFitView();
					}else if (msg.data.iLocType==1){
						showPtMarker([msg.data.fLng,msg.data.fLat],msg.data.cAddr);
						$('#locatetype1').removeAttr('checked');
						$('#locatetype0').attr('checked','checked');
						g_map.setCenter(new AMap.LngLat(msg.data.fLng,msg.data.fLat));
					}
				}
			}else{
				showError(msg.msg);
			}
		},
		error: function(){
			showError('网络访问失败！');
		}
	});	
}

function checkPtInAreaPoligon(pt){
	if (null == g_areaPolygon || g_objType!='massif')
		return true;
	return g_areaPolygon.contains(pt);
}
function checkPoligonInAreaPoligon(poligon){
	if (null == g_areaPolygon || g_objType!='massif'){
		return true;
	}
	var ret = AMap.GeometryUtil.isRingInRing(poligon.getPath(),g_areaPolygon.getPath());
	return ret;
}
function checkPoligonCrossOtherPoligon(poligon){
	if (null == g_areaPolygon || g_objType!='massif'){
		return true;
	}
	var ret = true;
	var pts = poligon.getPath();
	for(var i=0;i<g_otherMassifPolygon.length;i++){
		var isCross = AMap.GeometryUtil.doesRingRingIntersect(pts,g_otherMassifPolygon[i].getPath());
		if (isCross){
			ret = false;
			break;
		}
	}
	return ret;
}

function mapClick(pt,formatAddr){
	if (true != g_bSelPoint)
		return;
	if (null != g_curSeled){
		g_map.remove(g_curSeled);
		g_curSeled = null;
	}
	showPtMarker(pt,formatAddr);
}
function showPtMarker(pt,formatAddr){
	if (!checkPtInAreaPoligon(pt)){
		showError("选择的位置未在项目区域内，请重新选择");
		return;
	}
	g_curSeled = new AMap.Marker({
		position: pt
	});
	g_curSeled.setTop(true);
	g_curSeled.setMap(g_map);
	g_curSeled.setTitle(formatAddr);
	g_type = "point";
	
	g_curSeled.on('click',function(){
		var title = this.getTitle();
		var curPt = this.getPosition();
		var html=[];
		html.push('<div class="infowindow">');
		html.push('<div class="infotitle">当前位置</div>');
		if (null != title && '' != title) {
			html.push('<div class="infoline">地址：'+ title + '</div>');
		}
		html.push('<div class="infoline">坐标：');
		html.push(curPt.getLng()+' , '+curPt.getLat());
		html.push('</div>');
		html.push('</div>');
		showInfoWindow(curPt,html.join(''),new AMap.Pixel(0,-30));
	});	
	var html=[];
	html.push('<div class="infowindow">');
	html.push('<div class="infotitle">当前位置</div>');
	if (null != formatAddr && '' != formatAddr) {
		html.push('<div class="infoline">地址：'+ formatAddr + '</div>');
	}
	html.push('<div class="infoline">坐标：');
	html.push(pt[0]+' , '+pt[1]);
	html.push('</div>');
	html.push('</div>');
	showInfoWindow(pt,html.join(''),new AMap.Pixel(0,-30));
}

function startSelect(){
	if (g_status == 2)
		return;
	var $sel = $('#startSel'); 
	if ($sel.html()=='选择'){
		if ($('#locatetype0').is(':checked')){
			g_bSelPoint = true;
		}else{
			startDraw("polygon",drawOver);
		}
		$sel.html('结束');
		if (null != g_curSeled){
			g_map.remove(g_curSeled);
			g_curSeled = null;
			$('#editPolygon').hide();
		}
		closeInfoWindow();
		g_status = 1;		
	}else{
		$sel.html('选择');
		g_bSelPoint = false;
		g_status = 0;
		endDraw();
	}
}

function editPolygon(){
	if (g_status == 1)
		return;
	if (null != g_polygonEditor){
		g_polygonEditor.close();
		g_polygonEditor = null;
	}
	if($('#editPolygon').html()=='结束编辑'){
		$('#editPolygon').html('编辑区域');
		g_status=0;
		if (!checkPoligonInAreaPoligon(g_curSeled)){
			showError("绘制的区域超出来项目的红线范围，请重新选择或编辑");
			return;
		}
		if (!checkPoligonCrossOtherPoligon(g_curSeled)){
			showError("绘制的区域与其它地块有交叉，请重新选择或编辑");
			return;
		}
		return;
	}
	if (null == g_curSeled || g_type != "polygon")
		return;
	$('#editPolygon').html('结束编辑');
	g_polygonEditor= new AMap.PolyEditor(g_map, g_curSeled);
	g_polygonEditor.open();
	g_status = 2;
}

function drawOver(polygon){
	g_curSeled = polygon;
	g_type = "polygon";
	$('#startSel').html('选择');
	g_bSelPoint = false;
	g_status = 0;
	$('#editPolygon').show();
	
	if (!checkPoligonInAreaPoligon(polygon)){
		showError("绘制的区域超出来项目的红线范围，请重新选择或编辑");
		return;
	}
	if (!checkPoligonCrossOtherPoligon(g_curSeled)){
		showError("绘制的区域与其它地块有交叉，请重新选择或编辑");
		return;
	}
}

function search(){
	$('#searchresult').html('');
	$('#searchresult').hide();
	var text = $('#searchText').val().trim();
	if (text == '')
		return;
	if (null == placeSearch)
		return;
	g_map.remove(g_markers);
	g_markers=[];
	placeSearch.search(text,function(status,result){
		var resultDom = $('#searchresult');
		if (status != 'complete' || result.info != 'OK'){
			resultDom.html('没有搜索到匹配结果');
		}else{
			for(var i=0;i<result.poiList.pois.length;i++){
				var poi = result.poiList.pois[i];
				var item=[];
	    		item.push('<div class="searchresult-item" index="'+i+'">');
	    		item.push('<div class="item-icon"></div>');
	    		item.push('<div class="item-name">'+poi.name+'</div>');
	    		item.push('<div class="item-addr">'+poi.address+'</div>');
	    		item.push('</div>');
	    		resultDom.append(item.join(''));
	    		
	    		var marker = new AMap.Marker({
	    			icon: "images/circle-blue-16.png",
	    			bubble: true,
	    			position: poi.location
	    		});
	    		marker.setMap(g_map);
	    		marker.setTitle(poi.name);
	    		g_markers.push(marker);
	    		marker.on('mouseover',function(){
	    			var title = this.getTitle();
	    			this.setLabel({//label默认蓝框白底左上角显示，样式className为：amap-marker-label
	    		        offset: new AMap.Pixel(20, 20),//label相对于maker的位置
	    		        content: title
	    		    });
	    		});
	    		marker.on('mouseout',function(){
	    			this.setLabel({});
	    		});
			}
			g_map.setFitView();
		}
		resultDom.show();
		
		var top = resultDom.offset().top;
		var fullHeight = $(window).height();
		resultDom.height(fullHeight - top - 30);
	});
}

function save(){
	if (null == g_curSeled){
		showError("当前没有选择");
		return;
	}
	var params={};
	params.objtype = g_objType;
	params.objid= g_objID;
	params.projid= g_projID;
	if (g_type == "polygon"){
		if (!checkPoligonInAreaPoligon(g_curSeled)){
			showError("绘制的区域超出了项目的红线范围，请重新选择或编辑");
			return;
		}
		if (!checkPoligonCrossOtherPoligon(g_curSeled)){
			showError("绘制的区域与其它地块有交叉，请重新选择或编辑");
			return;
		}
		params.loctype = 2;
		var pts = g_curSeled.getPath();
		var out=[];
		out.push('[');
		for(var i=0;i<pts.length;i++){
			if (i>0) out.push(',');
			out.push('[');
			out.push(pts[i].getLng());
			out.push(',');
			out.push(pts[i].getLat());
			out.push(']');
		}
		out.push(']');
		params.polygon = out.join('');
	}else{
		if (!checkPtInAreaPoligon(g_curSeled.getPosition())){
			showError("选择的位置不在项目的红线范围内，请重新选择");
			return;
		}
		params.loctype = 1;
		params.lng = g_curSeled.getPosition().getLng();
		params.lat = g_curSeled.getPosition().getLat();
		params.addr = g_curSeled.getTitle();
	}
	$.ajax({
		type : "post",
		url : '${urlhead}/ajax.html?ajax=editLocation',
		dataType : 'json',
		data: params,
		timeout : 10000,
		success : function(msg, status) {
			if (msg.status == 200) {
				showMessage("保存成功！");
			}else{
				showError(msg.msg);
			}
		},
		error: function(){
			showError('网络访问失败！');
		}
	});
}
</script>

</html>
