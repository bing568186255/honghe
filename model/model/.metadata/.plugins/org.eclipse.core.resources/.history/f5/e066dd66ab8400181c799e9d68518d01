/*
 * config:
 *		id:
 *		class:
 *		background:
 *		menus:		[
 *						{group: {name: name, display: content}, //can be omited or empty
 *						 active: true/false,	//can be omited,default false
 *						 items:[{
 *							name: name, 
 *							extinfo: extinfo,		//optional,extend information 
 *							display: content,
 *							enabled: false/true		//optional,default is true
 *						 },...]
 *						}
 *					]
 *		itemAction:	function					//parameter is item name and extinfo
 * set:
 *		addGroup
 *		addItem
 *		delGroup
 *		delItem
 *		activeItem:		select item
 * get:
 *		activeItem:		return active item name
 */
$(function(){
	var jsPath = getJSPath("leftmenu.js");
	$("<link>").attr(
		{
			rel: "stylesheet",
			type: "text/css",
			href: jsPath + "leftmenu.css"
		}
	).appendTo("head");
});
function LeftmenuModule(){
	this.name = "leftmenu";
	this.para={};
	this.config = function(cfg){
		this.para["class"] = "";
		this.para["id"]= "";
		$.extend(this.para,cfg);
		this.id=this.para["id"];
		return this;
	};
	this.initDom = function(dom){
		if (null != this.mydom)
			return;
		this.setParent(dom);
		this.mydom = $('<div class="LeftmenuModule ' + this.para["class"] + '"></div>');
		if (this.id != '')
			this.mydom.attr('id',this.id);
		if(null != this.para["background"] && undefined != this.para["background"])
			this.mydom.css("background",this.para["background"]);
		var itemClick = function(name,extinfo){
			this.mydom.find('div.LeftmenuModule-item').removeClass('active');
			this.mydom.find('div.LeftmenuModule-item[name='+name+']').addClass('active');
			if(typeof this.para["itemAction"] == 'function'){
				this.para["itemAction"](name,extinfo);
			}
		}.bind(this);
		var groupClick=function(name){
			this.mydom.find('div.LeftmenuModule-group').removeClass('active');
			this.mydom.find('div.LeftmenuModule-group[groupname='+name+']').addClass('active');
		}.bind(this);
		for(var i=0;i<this.para["menus"].length; i++){
			var groupCfg = this.para["menus"][i];
			var group = this.mydom;
			var groupName = "";
			if (null != groupCfg["group"] && undefined != groupCfg["group"]){
				groupName = groupCfg["group"].name;
				if (null != groupName && undefined != groupName && '' != groupName){
					group = $('<div class="LeftmenuModule-group"></div>');
					group.attr('groupname',groupName);
					if (groupCfg["active"])
						group.addClass("active");
					var groupHead = $('<div class="LeftmenuModule-grouphead" groupname="'+groupName+'">'
							+groupCfg["group"].display+'</div>');
					groupHead.bind("click",function(){
						groupClick($(this).attr('groupname'));
					});
					group.append(groupHead);
					this.mydom.append(group);
				}
			}
			for(var j=0;j<groupCfg["items"].length;j++){
				var itemName = groupCfg["items"][j].name;
				var item = $('<div class="LeftmenuModule-item" name="'+itemName+'">'
						+groupCfg["items"][j].display+'</div>');
				if (0 == j)
					item.addClass("first");
				if (groupCfg["items"].length -1 == j)
					item.addClass("last");
				if (null != groupCfg["items"][j].extinfo && undefined != groupCfg["items"][j].extinfo)
					item.attr('ext',groupCfg["items"][j].extinfo);
				if (false == groupCfg["items"][j].enabled)
					item.addClass('disable');
				item.bind("click",function(){
					if ($(this).hasClass('disable'))
						return;
					itemClick($(this).attr('name'),$(this).attr('ext'));
				});
				group.append(item);
			}
		}
	};
	this.render = function(dom){
		this.initDom(dom);
		if (null == this.mydom)
			return;
		if (null != this.parent)
			this.mydom.appendTo(this.parent);
		return this;
	};
	this.set = function(name,value){
		if (name == "activeItem"){
			var item = this.mydom.find('div.LeftmenuModule-item[name='+value+']');
			if (null != item && item.length > 0){
				item.click();
			}
		}
		return this;
	};
	this.get=function(name){
		if (name=="activeItem"){
			var item = this.mydom.find('div.LeftmenuModule-item.active');
			if (null != item && item.length > 0){
				return item.attr('name');
			}else{
				return "";
			}
		}
	};
}
LeftmenuModule.prototype = new Module();
