<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta name="viewport" content="initial-scale=1, maximum-scale=1">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="black">
<%@ include file="global-m.jsp" %>
<title>全市项目展示</title>

<style type="text/css">
   	#echart-stat{
   		display: none;
   		position: absolute;
   		left: 2%;
   		top: 160px;
   		width: 96%;
   		height: 400px;
   		background: #fff;
   		border: solid 1px #AAA;
   		z-index: 1;
   		font-size: 2em;
   	}
   	#legend{
   		display: none;
   		position: absolute;
   		left: 10px;
   		bottom: 10px;
   		width: 300px;
   		background: #fff;
   		z-index: 1;
   		font-size: 1em;
   	}
   	#echart-detail{
   		display: none;
   		position: absolute;
   		left: 2%;
   		right: 2%;
   		top: 160px;
   		height: 400px;
   		background: #fff;
   		z-index: 1;
   		border: solid 1px #AAA;
   		font-size: 2em;
   	}
   	div.echart-title{
   		position: relative;
   		left: 0px;
   		right: 0px;
		text-align: right;
		padding-right: 5px;
		padding-top: 5px;
   		font-size: 2em;
   		height: 0.5em;
   	}
   	div.echart-title span.close{
   		display: inline-block;
   		margin-top: -0.4em;
   	}
   	div.echart-content,
   	div.tb-content{
		width: 100%;
		height: 340px;
   	}
   	#echart-stat div.echart-content{
   		height: 340px;
   	}
   	div.areaname{
   		color: #000;
   		opacity: 0.3;
   		font-weight: bold;
   		font-size: 2em;
   	}
   	
   	.listmenu{
	    display: none;
	    position: absolute;
	    background: #353d43;
	    color: #DDD;
	    padding: 0.5em 0em;
	    -webkit-border-radius: 8px;
	    -moz-border-radius: 8px;
	    -o-border-radius: 8px;
	    border-radius: 8px;
	    font-size: 2em;
   		z-index: 8000;
   	}
    .listmenu-item{
    	cursor: pointer;
    	height: 2.5em;
    }
    .listmenu-item.selected{
    	background: #4795fe;
    }
    .listmenu-item td.name{
    	padding: 0px 35px;
    	text-align: center;
    }
   	#selShowProject{
   		position: absolute;
   		right: 10px;
   		top: 80px;
   		padding: 2px 5px;
   		z-index: 2000;
   		display: none;
   	}
   	#listProject{
	    right: 70px;
	    top: 160px;
    }
   	#selShowStat{
   		position: absolute;
   		left: 10px;
   		top: 80px;
   		padding: 2px 5px;
   		z-index: 2000;
   		display: none;
   	}
   	#listStat{
	    left: 70px;
	    top: 160px;
    }
    
    #legend div.legend-item{
    	height: 20px;
    	margin: 10px 5px;
    }
    #legend div.legend-item div.float-left{
    	float: left;
    }
    #legend div.legend-item div.float-right{
    	float: right;
    }
    #legend div.legend-item div.legend{
    	width: 20px;
    	height: 15px;
		border:1px solid #DDDDDD;
		border-radius: 4px;
    }
    
    div.infoline.anchor{
    	color: blue;
    }
    div.infowindow{
    	font-size: 2em;
    }
</style>

</head>

<body>
    <div id="container" tabindex="1" style="position:absolute;left:0px;right:0px;top:0px;bottom:0px;z-index:2;"></div>
    <div id="selShowProject"><img src="images/doclist.png" style="width:64px;height:64px;"/></div>
    <div id="listProject" class="listmenu">
		<table>
			<tr class="listmenu-item all selected" projid="">
				<td class="icon"><div class="selectedicon"></div></td>
				<td class="name">所有项目</td>
			</tr>
		</table>
    </div>
    <div id="selShowStat"><img src="images/bar.png" style="width:64px;height:64px;"/></div>
    <div id="listStat" class="listmenu">
		<table>
			<tr class="listmenu-item selected" type="">
				<td class="icon"><div class="selectedicon"></div></td>
				<td class="name">不显示统计</td>
			</tr>
			<tr class="listmenu-item" type="financing">
				<td class="icon"><div class="selectedicon"></div></td>
				<td class="name">融资统计图</td>
			</tr>
			<tr class="listmenu-item" type="remove">
				<td class="icon"><div class="selectedicon"></div></td>
				<td class="name">项目拆迁量对比</td>
			</tr>
			<tr class="listmenu-item" type="progress">
				<td class="icon"><div class="selectedicon"></div></td>
				<td class="name">前期进度对比</td>
			</tr>
			<tr class="listmenu-item" type="expend">
				<td class="icon"><div class="selectedicon"></div></td>
				<td class="name">地块支出统计图</td>
			</tr>
			<tr class="listmenu-item" type="massifremove">
				<td class="icon"><div class="selectedicon"></div></td>
				<td class="name">地块拆迁量对比</td>
			</tr>
			<tr class="listmenu-item" type="massifprog">
				<td class="icon"><div class="selectedicon"></div></td>
				<td class="name">地块进度对比</td>
			</tr>
		</table>
    </div>
    <div id="echart-stat">
    	<div class='echart-title'><span class='close anchor' onclick='echartStatClose()'>x</span></div>
    	<div class='echart-content'></div>
    </div>
    <div id="legend">
    </div>
    <div id="echart-detail">
    	<div class='echart-title'><span class='close anchor' onclick='echartDetailClose()'>x</span></div>
    	<div class='echart-content'></div>
    	<div class='tb-content' style="display:none"></div>
    </div>
</body>

<script type=text/javascript src="js/echarts.min.js"></script>
<script language="JavaScript">
var g_areaPolygons = {};
var g_fitPolygons=[];
var g_massifPolygons = {};
var g_massifShow3D = true;
var delta3D=[0,0];//[-0.001,0.0025];
var g_echartStat = null;
var g_echartDetail = null;
var g_massifNames = [];
var g_cylinders = [];
var g_barMinHeight = 1200;
var g_barMaxHeight = 4000;
var g_facilities = [];
var g_housePrices=[];
var g_statSize = 32;
$(function(){
	amapinit({
		type:"3D",
		show:"satelite",
		showName: false,
		defaultSatellite: false,
		domIDName:"container",
		complete:mapLoaded,
		extTool: [{'name':'周边配套','fun': showFacility, 'active': false}/*,
		          {'name':'周边房价','fun': showHousePrice, 'active': false}*/]
	});
	initShowClick();
	$('body').click(function(){
		$('div.listmenu').each(function(){
			if (!$(this).is(":hidden")){
				$(this).slideUp(500);
			}
		});
	});
});

function initShowClick(){
	$("#selShowProject").click(function(e){
		if ($('#listProject').is(":hidden")){
			$('#listProject').slideDown(500);
		}else{
			$('#listProject').slideUp(500);
		}
		e.stopPropagation();
		return false;
	});
	$("#selShowStat").click(function(e){
		if ($('#listStat').is(":hidden")){
			$('#listStat').slideDown(500);
		}else{
			$('#listStat').slideUp(500);
		}
		e.stopPropagation();
		return false;
	});
	setStatSelect();
}
function setStatSelect(){
	$('#listStat table tr.listmenu-item').click(function(e){
		$('#listStat table tr.listmenu-item').removeClass('selected');
		$(this).addClass('selected');
		var type= $(this).attr('type');
		if ('' == type){
			$('#echart-stat').hide();
			$('#legend').hide();
			for(var i=0;i<g_cylinders.length;i++){
				g_object3Dlayer.remove(g_cylinders[i]);
			}
			g_cylinders = [];
		}else{
			showStat(type);
			g_map.setFitView(g_fitPolygons);
		}
		$('#listStat').slideUp(500);
		e.stopPropagation();
		return false;		
	});
}
function setProjectSelect(){
	$('#listProject table tr.listmenu-item').click(function(e){
		$('#listProject table tr.listmenu-item').removeClass('selected');
		$(this).addClass('selected');
		var projID= $(this).attr('projid');
		if ('' == projID){
			if (g_fitPolygons.length > 0){
		    	g_map.setFitView(g_fitPolygons);
		    	var level = g_map.getZoom()+0.5;
		    	g_map.setZoom(level);
			}
		}else{
			if (null != g_areaPolygons[projID]){
		    	g_map.setFitView(g_areaPolygons[projID]);
		    	var level = g_map.getZoom()+0.5;
		    	g_map.setZoom(level);
			}
		}
		$('#listProject').slideUp(500);
		e.stopPropagation();
		return false;		
	});
}

function echartStatClose(){
	$('#echart-stat').hide();
}
function echartDetailClose(){
	$('#echart-detail').hide();
}

function mapLoaded(){
	$('#selShowProject').show();
	$('#selShowStat').show();
	$('#echart-detail').show();
	$('#echart-stat').show();
	g_echartStat = echarts.init($('#echart-stat div.echart-content')[0]);
	g_echartDetail = echarts.init($('#echart-detail div.echart-content')[0]);
	/*
    g_map.on('zoomchange',function(){
    	var curLevel = g_map.getZoom();
    	$('div.areaname').each(function(){
    		var acreage = parseInt($(this).attr('acreage'));
    		var size = (curLevel-8)*12;
			if (size < 18)
				size = 18;
			else if (size>40)
				size = 40;
    		$(this).css('font-size',size + 'px');
    	});
    });
	*/
	
	AMap.service('AMap.DistrictSearch', function() {
        var opts = {
            subdistrict: 0, 
            extensions: 'all',  //返回行政区边界坐标组等具体信息
            level: 'city'  //查询行政级别为 市
        };
        //实例化DistrictSearch
        var district = new AMap.DistrictSearch(opts);
        //行政区查询
        district.search('昆明市', function(status, result) {
            var bounds = result.districtList[0].boundaries;
            if (bounds) {
                for (var i = 0, l = bounds.length; i < l; i++) {
                    //生成行政区划polygon
				    var  polygon = new AMap.Polygon({
				        path: bounds[i],			//设置多边形边界路径
				        strokeColor: "#CC66CC", //线颜色
				        strokeOpacity: 0.5, 	//线透明度
				        strokeWeight: 5,    	//线宽
				        fillColor: "#000", 	//填充色
				        fillOpacity: 0,		//填充透明度
				        bubble: true
				    });
				    polygon.setMap(g_map);
                }
                g_map.setFitView();//地图自适应
            }

            getAllArea();
        });
    });
}

//读取所有项目信息和项目的地块信息，并显示
function getAllArea(){
	$.ajax({
		type : "post",
		url : '${urlhead}/ajax.html?ajax=getArea',
		dataType : 'json',
		timeout : 10000,
		success : function(msg, status) {
			if (msg.status == 200) {
				if (null != msg.rows){
					for(var i=0;i<msg.rows.length;i++){
						var data = msg.rows[i];
						showAreaPolygon(data);
						
						var projectItem=[];
						projectItem.push('<tr class="listmenu-item nosel" projid=');
						projectItem.push(data.cObjID);
						projectItem.push('>');
						projectItem.push('<td class="icon"><div class="selectedicon"></div></td>');
						projectItem.push('<td class="name">');
						projectItem.push(data.cProjName);
						projectItem.push('</td>');
						projectItem.push('</tr>');
						$('#listProject table').append(projectItem.join(''));
					}
					g_map.setFitView(g_fitPolygons);
			    	var level = g_map.getZoom()+0.5;
			    	g_map.setZoom(level);
			    	setProjectSelect();
			    	
					getMassifs();					
				}
			}else{
				showError(msg.msg);
			}
		},
		error: function(){
			showError('网络访问失败！');
		}
	});	
}

//显示项目多边形
function showAreaPolygon(data){
    var strokeColor = "#FF0000"; //线颜色
    var strokeOpacity = 0.8; 	//线透明度
    var strokeWeight = 2;    	//线宽
    var fillColor = "#600"; 	//填充色
    var fillOpacity = 0.6;		//填充透明度
    if (null != g_object3Dlayer){
	    fillOpacity = 0.3;
	    //fillColor = "transparent";
    }
	var pts = eval('('+data.cPolygon+')');
	var center = getCenter(pts);
    if (null != g_object3Dlayer){
    	center[0] += delta3D[0];
    	center[1] += delta3D[1];
    }
    data["center"] = center;
    var  polygon = new AMap.Polygon({
        path: pts,			//设置多边形边界路径
        strokeColor: strokeColor, //线颜色
        strokeOpacity: strokeOpacity, 	//线透明度
        strokeWeight: strokeWeight,    	//线宽
        fillColor: fillColor, 	//填充色
        fillOpacity: fillOpacity,		//填充透明度
        bubble: true,
        extData: data
    });
    polygon.setMap(g_map);
    g_areaPolygons[data.cObjID]=polygon;
    g_fitPolygons.push(polygon);

    //点击显示项目信息
    var ckFun = function(){
    	var info = this.getExtData();
		var html=[];
		html.push('<div class="infowindow">'); 		
		html.push('<div class="infotitle">'+info.cProjName+'</div>');
		html.push('<div class="infoline">项目全称：');
		html.push(info.cFullName);
		html.push('</div>');
		html.push('<div class="infoline">用地性质：');
		html.push(info.cProperty);
		html.push('</div>');
		html.push('<div class="infoline">项目面积：');
		html.push(info.fAcreage+' 亩');
		html.push('</div>');
		html.push('<div class="infoline">立项日期：');
		html.push(info.dtCreate);
		html.push('</div>');
		html.push('<div class="infoline">土地来源：');
		html.push(info.cSource);
		html.push('</div>');
		html.push('<div class="infoline">使用年限：');
		html.push(info.iYears+" 年");
		html.push('</div>');
		html.push('<div class="infoline">计划投入：');
		html.push(info.iPlannedAmount+" 万元");
		html.push('</div>');
		html.push('<div class="infoline">需要融资金额：');
		html.push(info.iFinancing+" 万元");
		html.push('</div>');
		if (null != info.financing){
			html.push('<div class="infoline anchor" onclick="showFinancing(\''+info.cObjID+'\')">已融资金额：');
			html.push(info.financing+" 万元");
			if (info.iFinancing > 0){
				var per = info.financing*100.0 / info.iFinancing;
				html.push(" ("+per.toFixed(2)+"%)")
			}
			html.push('</div>');
		}
		html.push('<div class="infoline">计划完成日期：');
		html.push(info.dtPlannedOver);
		html.push('</div>');
		html.push('<div class="infoline">投资来源：');
		html.push(info.iInvestment==0?'自投':'社会投资');
		html.push('</div>');
		html.push('<div class="infoline">当前状态：');
		html.push(info.cStatus);
		html.push('</div>');
		html.push('<div class="infoline anchor" onclick="showNodeList(\'1\',\''+info.cObjID+'\')">当前节点：');
		html.push(transNodeName(info.nodeName));
		html.push('</div>');
		if (null != info.abnormalCount){
			html.push('<div class="infoline anchor" onclick="getAbnormal(\'proj\',\''+info.cObjID+'\')">异常数量：');
			html.push(info.abnormalCount);
			html.push('</div>');
		}
		html.push('</div>');
    	showInfoWindow(info.center,html.join(''));
    };
    polygon.on('click',ckFun);
    polygon.on('rightclick',ckFun);

    var acreage = parseInt(polygon.getArea());
    if (isNaN(acreage)) acreage = 0;
	var showName = new AMap.Text({
        text: '<div class="areaname" acreage="'+acreage+'">'+data.cProjName+'</div>',
        textAlign:'center', // 'left' 'right', 'center',
        verticalAlign:'middle', //middle 、bottom
        draggable:false,
        cursor:'pointer',
        style:{
            'background':'transparent',
	           	'border':'none',
            'padding':'0px 0px'
        },
        bubble: false,
        position: center
    });
    showName.setMap(g_map);
}

//读取所有地块信息
function getMassifs(){
	$.ajax({
		type : "post",
		url : '${urlhead}/ajax.html?ajax=getMassif',
		dataType : 'json',
		timeout : 10000,
		success : function(msg, status) {
			if (msg.status == 200) {
				if (null != msg.rows){
					for(var i=0;i<msg.rows.length;i++){
						var data = msg.rows[i];
						showMassifPolygon(data);
					}
				}
			}else{
				showError(msg.msg);
			}
		},
		error: function(){
			showError('网络访问失败！');
		}
	});	
}

//显示地块多边形
function showMassifPolygon(data){
    var strokeOpacity = 0.8; 	//线透明度
    var strokeWeight = 2;    	//线宽
    var fillOpacity = 0.35;		//填充透明度
    //如果显示3D，2D的多边形设为全透明，只为处理点击事件
    if (null != g_object3Dlayer && g_massifShow3D){
	    strokeOpacity = 0;
	    strokeWeight = 0;
	    fillOpacity = 0;
    }    
	var pts = eval('('+data.cPolygon+')');
	var center = getCenter(pts);
    if (null != g_object3Dlayer){
    	center[0] += delta3D[0];
    	center[1] += delta3D[1];
    }
    data["center"]=center;
    
    var color = '#000000';
    var type = data.cCategory;
    var colorIndex = 0;
	for(var t=0;t<typeColors.length;t++){
		if (type == typeColors[t].type){
			colorIndex = typeColors[t].colorno;
			break;
		}
	}
	if (colorIndex>0 && colorIndex < colorIndexes.length){
		color = getIndexColor(colorIndex);
	}
    var  polygon = new AMap.Polygon({
        path: pts,			//设置多边形边界路径
        strokeColor: color, //线颜色
        strokeOpacity: strokeOpacity, 	//线透明度
        strokeWeight: strokeWeight,    	//线宽
        fillColor: color, 	//填充色
        fillOpacity: fillOpacity,		//填充透明度
        bubble: true,
        extData: data
    });
    polygon.setMap(g_map);
    if (null == g_massifPolygons[data.cProjID]){
    	g_massifPolygons[data.cProjID] = {};
    }
    var projPolygons = g_massifPolygons[data.cProjID]; 
    projPolygons[data.cObjID] = polygon;
    
    polygon.on('click',function(){
    	var info = this.getExtData();
		var html=[];
		html.push('<div class="infowindow">'); 		
		html.push('<div class="infotitle">'+info.cMassifName+'</div>');
		html.push('<div class="infoline">地块用途：');
		html.push(info.cUsage);
		html.push('</div>');
		html.push('<div class="infoline">地块面积：');
		html.push(info.fAcreage+' 亩');
		html.push('</div>');
		if (null != info.cStyle && '' != info.cStyle){
			html.push('<div class="infoline">规划样式：');
			html.push(info.cStyle);
			html.push('</div>');
		}
		html.push('<div class="infoline">建筑密度：');
		html.push(info.fDensity);
		html.push('</div>');
		html.push('<div class="infoline">开始日期：');
		html.push(info.dtStart);
		html.push('</div>');
		html.push('<div class="infoline">容积率：');
		html.push(info.fVolRate);
		html.push('</div>');
		html.push('<div class="infoline" onclick="showCoastDetail()">计划投入：');
		html.push(info.iPlannedAmount+' 万元');
		html.push('</div>');
		if (null != info.expend){
			html.push('<div class="infoline anchor" onclick="showExpend(\''+info.cObjID+'\')">已投入金额：');
			html.push(info.expend+" 万元");
			if (info.iPlannedAmount > 0){
				var per = info.expend*100.0 / info.iPlannedAmount;
				html.push(" ("+per.toFixed(2)+"%)")
			}
			html.push('</div>');
		}
		html.push('<div class="infoline">拆迁进度：');
		html.push(info.iRemoved+'('+info.iNeedRemove+')');
		html.push('</div>');
		html.push('<div class="infoline">供地日期：');
		html.push(info.dtSupply);
		html.push('</div>');
		if (null != info.fPrice && info.fPrice>0.01){
			html.push('<div class="infoline">组价成本：');
			html.push(info.fPrice);
			html.push('</div>');
		}
		html.push('<div class="infoline anchor" onclick="showNodeList(\'2\',\''+info.cObjID+'\')">当前节点：');
		html.push(transNodeName(info.nodeName));
		html.push('</div>');
		if (null != info.abnormalCount){
			html.push('<div class="infoline anchor" onclick="getAbnormal(\'massif\',\''+info.cObjID+'\')">异常数量：');
			html.push(info.abnormalCount);
			html.push('</div>');
		}		html.push('</div>');
    	showInfoWindow(info.center,html.join(''));
    });
    polygon.on('rightclick',function(){});
    
	var showName = new AMap.Text({
        text: data.cMassifName,
        textAlign:'center', // 'left' 'right', 'center',
        verticalAlign:'middle', //middle 、bottom
        draggable:false,
        cursor:'pointer',
        style:{
            'background':'transparent',
	           'border':'none',
	           'color':'white',
            'padding':'0px 0px',
            'font-size': '1em'
        },
        bubble: false,
        position: center
    });
    showName.setMap(g_map);
    g_massifNames.push(showName);

    if (null != g_object3Dlayer && g_massifShow3D){
		color += '88';
	    var height = 200;
	    var prism = new AMap.Object3D.Prism({
	        path: pts,
	        height: height,
	        color: color
	    });
	    prism.transparent = true;
	    g_object3Dlayer.add(prism);
    }
}

function showFinancing(projID){
	$('#echart-detail').css('z-index','3000');
	$('#echart-detail').show();
	g_echartDetail.clear();	
	$('#echart-detail div.echart-content').show();
	$('#echart-detail div.tb-content').hide();
	
	$.ajax({
		type : "post",
		url : '${urlhead}/ajax.html?ajax=statFinancingMon',
		dataType : 'json',
		data: {"projid": projID},
		timeout : 10000,
		success : function(msg, status) {
			if (msg.status == 200) {
				if (null != msg.rows){
					showProjFinancingStat(msg.rows);
				}
			}else{
				showError(msg.msg);
			}
		},
		error: function(){
			showError('网络访问失败！');
		}
	});		
}
function showProjFinancingStat(rows){
	var legends=[];
	var mons = [];
	var series = [];
	for(var i=0;i<rows.length;i++){
		var source = rows[i].cSource;
		var mon = rows[i].mon;
		if ($.inArray(source,legends)<0){
			legends.push(source);
		}
		if ($.inArray(mon,mons)<0){
			mons.push(mon);
		}
	}
	for(var i=0;i<legends.length;i++){
		var sery = {name: legends[i], type: 'bar', barMaxWidth: 30,stack: '融资额',data:[]};
		for(var j=0;j<mons.length;j++){
			var exists = false;
			for(var k=0;k<rows.length;k++){
				if (rows[k].cSource == legends[i] && rows[k].mon==mons[j]){
					sery.data.push(rows[k].amount);
					exists = true;
					break;
				}
			}
			if (!exists){
				sery.data.push(0);
			}
		}
		series.push(sery);
	}
	var option = {
		textStyle:{
			fontSize: g_statSize
		},
	    tooltip : {
	        trigger: 'axis',
	        axisPointer : {
	            type : 'shadow'
	        }
	    },
	    legend: {
	        data: legends
	    },
	    grid: {
	        left: 80,
	        right: 80,
	        bottom: '3%',
	        containLabel: true
	    },
	    xAxis : [
	        {
	            type : 'category',
	            data : mons
	        }
	    ],
	    yAxis : [
	        {
	            type : 'value',
	            name: '金额（万元）'
	        }
	    ],
	    series : series
	};
	g_echartDetail.clear();	
	g_echartDetail.setOption(option);
}

function showExpend(massifID){
	$('#echart-detail').css('z-index','3000');
	$('#echart-detail').show();
	g_echartDetail.clear();	
	$('#echart-detail div.echart-content').show();
	$('#echart-detail div.tb-content').hide();
	
	$.ajax({
		type : "post",
		url : '${urlhead}/ajax.html?ajax=getExpendMon',
		dataType : 'json',
		data: {"massifid": massifID},
		timeout : 10000,
		success : function(msg, status) {
			if (msg.status == 200) {
				if (null != msg.rows){
					showMassifExpendStat(msg.rows);
				}
			}else{
				showError(msg.msg);
			}
		},
		error: function(){
			showError('网络访问失败！');
		}
	});		
}
function showMassifExpendStat(rows){
	var mons = [];
	var series = [{name: '支出额', type: 'bar', barMaxWidth: 30,data:[]}];
	for(var i=0;i<rows.length;i++){
		mons.push(rows[i].mon);
		series[0].data.push(rows[i].amount);
	}
	var option = {
		textStyle:{
			fontSize: g_statSize
		},
	    tooltip : {
	        trigger: 'axis',
	        axisPointer : {
	            type : 'shadow'
	        }
	    },
	    grid: {
	        left: 60,
	        right: 15,
	        bottom: 10,
	        containLabel: true
	    },
	    xAxis : [
	        {
	            type : 'category',
	            data : mons
	        }
	    ],
	    yAxis : [
	        {
	            type : 'value',
	            name: '支出额（万元）'
	        }
	    ],
	    series : series
	};
	g_echartDetail.clear();	
	g_echartDetail.setOption(option);
}

//type=='1'前期; type=='2'地块实施
function showNodeList(type,id){
	$('#echart-detail').css('z-index','3000');
	$('#echart-detail').show();
	g_echartDetail.clear();	
	$('#echart-detail div.echart-content').show();
	$('#echart-detail div.tb-content').hide();
	var url ="";
	var data={};
	if (type == "1"){
		url = '${urlhead}/ajax.html?ajax=getProjectNodes';
		data = {"projid": id};
	}else if (type=="2"){
		url = '${urlhead}/ajax.html?ajax=getMassifNodes';
		data = {"massifid": id};
	}else{
		return;
	}
	$.ajax({
		type : "post",
		url : url,
		dataType : 'json',
		data: data,
		timeout : 10000,
		success : function(msg, status) {
			if (msg.status == 200) {
				if (null != msg.rows){
					showNode(msg.rows,type);
				}
			}else{
				showError(msg.msg);
			}
		},
		error: function(){
			showError('网络访问失败！');
		}
	});	
}
//type=='1'前期; type=='2'地块实施
function showNode(rows, type){
	var progress = getNodeNameList(type);
	var departs = ['战略发展部', '招标合同部', '财务部','置地中心'];
	for(var i=0;i<rows.length;i++){
		var dep = rows[i].cDepart;
		if (null != dep && '' != dep){
			if ($.inArray(dep,departs)<0){
				departs.push(dep);
			}
		}
	}
	var data = [];
	for(var i=0;i<rows.length;i++){
		var pg = transNodeName(rows[i].cNodeName);
		var indexProgress = $.inArray(pg,progress);
		var indexDepart = $.inArray(rows[i].cDepart,departs);
		if (indexProgress >= 0 && indexDepart>=0){
			data.push([indexProgress,indexDepart,rows[i].diffDays]);
		}
	}
	var option = {
		textStyle:{
			fontSize: g_statSize
		},
	    tooltip: {
	        position: 'top',
	        formatter: function(params){
	        	return params.seriesName+': ' + params.data[2];
	        }
	    },
	    legend:{
	    	show:false
	    },
	    animation: false,
	    grid: {
	        height: '50%',
	        y: '10%'
	    },
	    xAxis: {
	        type: 'category',
	        data: progress,
	        splitArea: {
	            show: true
	        }
	    },
	    yAxis: {
	        type: 'category',
	        data: departs,
	        splitArea: {
	            show: true
	        }
	    },
	    visualMap: {
	    	show: true,
	        min: 0,
	        max: 5,
	        calculable: false,
	        orient: 'horizontal',
	        left: 'center',
	        bottom: '15%',
	        inRange: {
	        	color: ['green', 'rgba(3,4,5,0.4)', 'red']
	        }
	    },
	    series: [{
	        name: '计划相差天数',
	        type: 'heatmap',
	        data: data,
	        label: {
	            normal: {
	                show: true
	            }
	        },
	        itemStyle: {
	            emphasis: {
	                shadowBlur: 10,
	                shadowColor: 'rgba(0, 0, 0, 0.5)'
	            }
	        }
	    }]
	};
	g_echartDetail.clear();	
	g_echartDetail.setOption(option);
}
function getAbnormal(type,id){
	$('#echart-detail').css('z-index','3000');
	$('#echart-detail').show();
	$('#echart-detail div.echart-content').hide();
	$('#echart-detail div.tb-content').show().html('');
	var url="";
	var data={};
	if (type == 'proj'){
		url = '${urlhead}/ajax.html?ajax=getProjectAbnormal';
		data = {"projid": id};
	}else if (type == "massif"){
		url = '${urlhead}/ajax.html?ajax=getMassifAbnormal';
		data = {"massifid": id};
	}else{
		return;
	}
	$.ajax({
		type : "post",
		url : url,
		dataType : 'json',
		data: data,
		timeout : 10000,
		success : function(msg, status) {
			if (msg.status == 200) {
				if (null != msg.rows){
					showAbnormal(msg.rows);
				}
			}else{
				showError(msg.msg);
			}
		},
		error: function(){
			showError('网络访问失败！');
		}
	});	
}
function showAbnormal(rows){
	var html=[];
	html.push('<table class="table-detail">');
	html.push('<thead><tr><th>发生日期</th><th>异常信息</th><th>负责部门</th><th>处理结果</th></tr></thead>');
	html.push('<tbody>');
	for(var i=0;i<rows.length;i++){
		html.push('<tr><td>');
		html.push(rows[i].dtCreate);
		html.push('</td>');
		html.push('<td>');
		html.push(rows[i].cInfo);
		html.push('</td>');
		html.push('<td>');
		html.push(rows[i].cDepart);
		html.push('</td>');
		html.push('<td>');
		html.push(rows[i].cResult);
		html.push('</td></tr>');
	}
	html.push('</tbody>');
	html.push('</table>');
	$('#echart-detail div.tb-content').html(html.join(''));
}

function showStat(type){
	$('#echart-stat').css('z-index','3000');
	$('#echart-stat').show();
	g_echartStat.clear();	
	$('#legend').css('z-index','3000');
	$('#legend').show().html('');
	for(var i=0;i<g_cylinders.length;i++){
		g_object3Dlayer.remove(g_cylinders[i]);
	}
	g_cylinders = [];

	if (type == "financing"){
		$.ajax({
			type : "post",
			url : '${urlhead}/ajax.html?ajax=statFinancing',
			dataType : 'json',
			timeout : 10000,
			success : function(msg, status) {
				if (msg.status == 200) {
					if (null != msg.rows){
						showFinancingStat(msg.rows);
						showFinancingCylinder(msg.rows);
					}
				}else{
					showError(msg.msg);
				}
			},
			error: function(){
				showError('网络访问失败！');
			}
		});		
	}else if (type == "remove"){
		$.ajax({
			type : "post",
			url : '${urlhead}/ajax.html?ajax=statRemove',
			dataType : 'json',
			timeout : 10000,
			success : function(msg, status) {
				if (msg.status == 200) {
					if (null != msg.rows){
						showRemoveStat(msg.rows);
						showRemoveCylinder(msg.rows);
					}
				}else{
					showError(msg.msg);
				}
			},
			error: function(){
				showError('网络访问失败！');
			}
		});		
	}else if (type == "progress"){
		showProgressStat();
	}else if (type == "expend"){
		$.ajax({
			type : "post",
			url : '${urlhead}/ajax.html?ajax=statExpend',
			dataType : 'json',
			timeout : 10000,
			success : function(msg, status) {
				if (msg.status == 200) {
					if (null != msg.rows){
						showExpendStat(msg.rows);
					}
				}else{
					showError(msg.msg);
				}
			},
			error: function(){
				showError('网络访问失败！');
			}
		});		
	}else if (type == "massifremove"){
		showMassifRemoveStat();
	}else if (type == "massifprog"){
		showMassifProgressStat();
	}
}
function showFinancingStat(rows){
	var legends=[];
	var projNames = [];
	var series = [];
	for(var i=0;i<rows.length;i++){
		var source = rows[i].cSource;
		var projName = rows[i].cProjName;
		if ($.inArray(source,legends)<0){
			legends.push(source);
		}
		if ($.inArray(projName,projNames)<0){
			projNames.push(projName);
		}
	}
	for(var i=0;i<legends.length;i++){
		var sery = {name: legends[i], type: 'bar', barMaxWidth: 30,stack: '融资额',data:[]};
		for(var j=0;j<projNames.length;j++){
			var exists = false;
			for(var k=0;k<rows.length;k++){
				if (rows[k].cSource == legends[i] && rows[k].cProjName==projNames[j]){
					sery.data.push(rows[k].totalAmount);
					exists = true;
					break;
				}
			}
			if (!exists){
				sery.data.push(0);
			}
		}
		series.push(sery);
	}
	var option = {
		textStyle:{
			fontSize: g_statSize
		},
	    tooltip : {
	        trigger: 'axis',
	        axisPointer : {
	            type : 'shadow'
	        }
	    },
	    legend: {
	        data: legends
	    },
	    grid: {
	        left: 60,
	        right: 15,
	        bottom: 10,
	        containLabel: true
	    },
	    xAxis : [
	        {
	            type : 'category',
	            data : projNames
	        }
	    ],
	    yAxis : [
	        {
	            type : 'value',
	            name: '金额（万元）'
	        }
	    ],
	    series : series
	};
	g_echartStat.clear();	
	g_echartStat.setOption(option);
}
function showFinancingCylinder(rows){
	var html=[];
	html.push('<div class="legend-item">');
	html.push('<div class="float-left legend" style="background:#F00"></div>');
	html.push('<div class="float-right">融资率小于30%</div>');
	html.push('</div>');
	html.push('<div class="legend-item">');
	html.push('<div class="float-left legend" style="background:#00F"></div>');
	html.push('<div class="float-right">融资率在30%与70%之间</div>');
	html.push('</div>');
	html.push('<div class="legend-item">');
	html.push('<div class="float-left legend" style="background:#0F0"></div>');
	html.push('<div class="float-right">融资率大于70%</div>');
	html.push('</div>');
	$('#legend').html(html.join(''));
	
	var values = {};
	for(var i=0;i<rows.length;i++){
		var projID = rows[i].cProjID;
		var amount = values[projID];
		if (null == amount)
			amount = 0;
		amount += rows[i].totalAmount;
		values[projID] = amount;
	}
	for(var key in values){
		var polygon = g_areaPolygons[key];
		if (null == polygon)
			continue;
		var data = polygon.getExtData();
		if (null == data)
			continue;
		var center = data.center;
		if (null == center)
			continue;
		var planFinacing = data.iPlannedAmount;
		var amount = values[key];
		var k = 1;
		if (planFinacing > 0.001){
			k = amount / planFinacing;
		}
		var color = [0,0,1,0.8];
		if (k < 0.3)
			color = [1,0,0,0.8];
		else if (k > 0.7)
			color = [0,1,0,0.8];		
		var height = k*(g_barMaxHeight - g_barMinHeight) + g_barMinHeight;
		var prism = addRegularPrism(center,4,height,1000,color);
		if (null != prism)
			g_cylinders.push(prism);
	}
}

function showRemoveStat(rows){
	var projNames = [];
	var series = [{name: '拆迁率', type: 'bar', barMaxWidth: 30,data:[]}];
	for(var i=0;i<rows.length;i++){
		var projName = rows[i].cProjName;
		projNames.push(rows[i].cProjName);
		var value = parseFloat((rows[i].removed * 100.0 / rows[i].needRemove).toFixed(2));
		series[0].data.push(value);
	}
	var option = {
		textStyle:{
			fontSize: g_statSize
		},
	    tooltip : {
	        trigger: 'axis',
	        axisPointer : {
	            type : 'shadow'
	        }
	    },
	    grid: {
	        left: 60,
	        right: 15,
	        bottom: 10,
	        containLabel: true
	    },
	    xAxis : [
	        {
	            type : 'category',
	            data : projNames
	        }
	    ],
	    yAxis : [
	        {
	            type : 'value',
	            name: '百分比（%）'
	        }
	    ],
	    series : series
	};
	g_echartStat.clear();	
	g_echartStat.setOption(option);
}
function showRemoveCylinder(rows){
	var html=[];
	html.push('<div class="legend-item">');
	html.push('<div class="float-left legend" style="background:#F00"></div>');
	html.push('<div class="float-right">拆迁率小于30%</div>');
	html.push('</div>');
	html.push('<div class="legend-item">');
	html.push('<div class="float-left legend" style="background:#00F"></div>');
	html.push('<div class="float-right">拆迁率在30%与70%之间</div>');
	html.push('</div>');
	html.push('<div class="legend-item">');
	html.push('<div class="float-left legend" style="background:#0F0"></div>');
	html.push('<div class="float-right">拆迁率大于70%</div>');
	html.push('</div>');
	$('#legend').html(html.join(''));
	
	for(var i=0;i<rows.length;i++){
		var projID = rows[i].cProjID;
		var polygon = g_areaPolygons[projID];
		if (null == polygon)
			continue;
		var data = polygon.getExtData();
		if (null == data)
			continue;
		var center = data.center;
		if (null == center)
			continue;
		var per = rows[i].removed / rows[i].needRemove;
		var color = [0,0,1,0.8];
		if (per < 0.3)
			color = [1,0,0,0.8];
		else if (per > 0.7)
			color = [0,1,0,0.8];		
		var height = per*(g_barMaxHeight - g_barMinHeight) + g_barMinHeight;
		var prism = addRegularPrism(center,4,height,1000,color);
		if (null != prism)
			g_cylinders.push(prism);
	}
}
function showProgressStat(){
	var projNames = [];
	var series = [{name: '完成率', type: 'bar', barMaxWidth: 30,data:[]}];
	for(var key in g_areaPolygons){
		var data = g_areaPolygons[key].getExtData();
		if (null == data)
			continue;
		projNames.push(data.cProjName);
		var nodeName = data.nodeName;
		var info = g_nodeNameList[nodeName];
		var value = 0;
		if (null != info && info.progress=='1'){
			value = parseFloat((info.index * 100 / g_nodeNameMax[0]).toFixed(2));
		}
		series[0].data.push(value);
		
		var center = data.center;
		if (null == center)
			continue;
		var per = value/100.0;
		var color = [0,0,1,0.8];
		if (per < 0.3)
			color = [1,0,0,0.8];
		else if (per > 0.7)
			color = [0,1,0,0.8];		
		var height = per*(g_barMaxHeight - g_barMinHeight) + g_barMinHeight;
		var prism = addRegularPrism(center,4,height,1000,color);
		if (null != prism)
			g_cylinders.push(prism);
	}
	var option = {
		textStyle:{
			fontSize: g_statSize
		},
	    tooltip : {
	        trigger: 'axis',
	        axisPointer : {
	            type : 'shadow'
	        }
	    },
	    grid: {
	        left: 80,
	        right: 15,
	        bottom: 10,
	        containLabel: true
	    },
	    xAxis : [
	        {
	            type : 'category',
	            data : projNames
	        }
	    ],
	    yAxis : [
	        {
	            type : 'value',
	            nameTextStyle: {fontSize: 20},
	            name: '前期完成节点百分比（%）'
	        }
	    ],
	    series : series
	};
	g_echartStat.clear();	
	g_echartStat.setOption(option);
	
	var html=[];
	html.push('<div class="legend-item">');
	html.push('<div class="float-left legend" style="background:#F00"></div>');
	html.push('<div class="float-right">节点完成率小于30%</div>');
	html.push('</div>');
	html.push('<div class="legend-item">');
	html.push('<div class="float-left legend" style="background:#00F"></div>');
	html.push('<div class="float-right">节点完成率在30%与70%之间</div>');
	html.push('</div>');
	html.push('<div class="legend-item">');
	html.push('<div class="float-left legend" style="background:#0F0"></div>');
	html.push('<div class="float-right">节点完成率大于70%</div>');
	html.push('</div>');
	$('#legend').html(html.join(''));
}

function showExpendStat(rows){
	var massifNames = [];
	var series = [{name: '投入额', type: 'bar', barMaxWidth: 30,data:[]}];
	for(var i=0;i<rows.length;i++){
		massifNames.push(rows[i].cMassifName);
		series[0].data.push(rows[i].totalAmount);
		
		var proj = g_massifPolygons[rows[i].cProjID];
		if (null == proj)
			continue;
		var polygon = proj[rows[i].cMassifID];
		if (null == polygon)
			continue;
		var data  = polygon.getExtData();
		if (null == data)
			continue;
		var center = data.center;
		if (null == center)
			continue;
		var per = 1;
		if (data.iPlannedAmount > 0.001)
			per = rows[i].totalAmount / data.iPlannedAmount;
		var color = [0,0,1,0.8];
		if (per < 0.3)
			color = [0,1,0,0.8];
		else if (per > 0.7)
			color = [1,0,0,0.8];		
		var height = per*(g_barMaxHeight - g_barMinHeight) + g_barMinHeight;
		var prism = addRegularPrism(center,4,height,1000,color);
		if (null != prism)
			g_cylinders.push(prism);
	}
	var option = {
		textStyle:{
			fontSize: g_statSize
		},
	    tooltip : {
	        trigger: 'axis',
	        axisPointer : {
	            type : 'shadow'
	        }
	    },
	    grid: {
	        left: 100,
	        right: 15,
	        bottom: 10,
	        containLabel: true
	    },
	    xAxis : [
	        {
	            type : 'category',
	            data : massifNames
	        }
	    ],
	    yAxis : [
	        {
	            type : 'value',
	            name: '地块投入额（万元）'
	        }
	    ],
	    series : series
	};
	g_echartStat.clear();	
	g_echartStat.setOption(option);
	
	var html=[];
	html.push('<div class="legend-item">');
	html.push('<div class="float-left legend" style="background:#F00"></div>');
	html.push('<div class="float-right">投入率大于70%</div>');
	html.push('</div>');
	html.push('<div class="legend-item">');
	html.push('<div class="float-left legend" style="background:#00F"></div>');
	html.push('<div class="float-right">投入率在30%与70%之间</div>');
	html.push('</div>');
	html.push('<div class="legend-item">');
	html.push('<div class="float-left legend" style="background:#0F0"></div>');
	html.push('<div class="float-right">投入率小于30%</div>');
	html.push('</div>');
	$('#legend').html(html.join(''));
}

function showMassifRemoveStat(){
	var massifNames = [];
	var series = [{name: '拆迁率', type: 'bar', barMaxWidth: 30,data:[]}];
	for(var key in g_massifPolygons){
		var projPolygons = g_massifPolygons[key];
		if (null == projPolygons)
			continue;
		for(var key2 in projPolygons){
			var data = projPolygons[key2].getExtData();
			if (null == data)
				continue;
			var needRemove = data.iNeedRemove;
			if (null == needRemove || needRemove < 1)
				continue;
			massifNames.push(data.cMassifName);
			var removed = data.iRemoved;
			var value = 100;
			if (needRemove > 0){
				value = parseFloat((removed * 100.0 / needRemove).toFixed(2));
			}
			series[0].data.push(value);
			
			var center = data.center;
			if (null == center)
				continue;
			var per = value/100.0;
			var color = [0,0,1,0.8];
			if (per < 0.3)
				color = [1,0,0,0.8];
			else if (per > 0.7)
				color = [0,1,0,0.8];		
			var height = per*(g_barMaxHeight - g_barMinHeight) + g_barMinHeight;
			var prism = addRegularPrism(center,4,height,1000,color);
			if (null != prism)
				g_cylinders.push(prism);
		}
	}
	var option = {
		textStyle:{
			fontSize: g_statSize
		},
	    tooltip : {
	        trigger: 'axis',
	        axisPointer : {
	            type : 'shadow'
	        }
	    },
	    grid: {
	        left: 40,
	        right: 15,
	        bottom: 10,
	        containLabel: true
	    },
	    xAxis : [
	        {
	            type : 'category',
	            data : massifNames
	        }
	    ],
	    yAxis : [
	        {
	            type : 'value',
	            name: '拆迁率（%）'
	        }
	    ],
	    series : series
	};
	g_echartStat.clear();	
	g_echartStat.setOption(option);
	
	var html=[];
	html.push('<div class="legend-item">');
	html.push('<div class="float-left legend" style="background:#F00"></div>');
	html.push('<div class="float-right">拆迁率小于30%</div>');
	html.push('</div>');
	html.push('<div class="legend-item">');
	html.push('<div class="float-left legend" style="background:#00F"></div>');
	html.push('<div class="float-right">拆迁率在30%与70%之间</div>');
	html.push('</div>');
	html.push('<div class="legend-item">');
	html.push('<div class="float-left legend" style="background:#0F0"></div>');
	html.push('<div class="float-right">拆迁率大于70%</div>');
	html.push('</div>');
	$('#legend').html(html.join(''));
}

function showMassifProgressStat(){
	var massifNames = [];
	var series = [{name: '完成率', type: 'bar', barMaxWidth: 30,data:[]}];
	for(var key in g_massifPolygons){
		var projPolygons = g_massifPolygons[key];
		if (null == projPolygons)
			continue;
		for(var key2 in projPolygons){
			var data = projPolygons[key2].getExtData();
			if (null == data)
				continue;
			massifNames.push(data.cMassifName);
			var nodeName = data.nodeName;
			var info = g_nodeNameList[nodeName];
			var value = 0;
			if (null != info && info.progress=='2'){
				value = parseFloat((info.index * 100 / g_nodeNameMax[1]).toFixed(2));
			}
			series[0].data.push(value);
		
			if (value > 0){
				var center = data.center;
				if (null == center)
					continue;
				var per = value/100.0;
				var color = [0,0,1,0.8];
				if (per < 0.3)
					color = [1,0,0,0.8];
				else if (per > 0.7)
					color = [0,1,0,0.8];		
				var height = per*(g_barMaxHeight - g_barMinHeight) + g_barMinHeight;
				var prism = addRegularPrism(center,4,height,1000,color);
				if (null != prism)
					g_cylinders.push(prism);
			}
		}
	}
	var option = {
		textStyle:{
			fontSize: g_statSize
		},
	    tooltip : {
	        trigger: 'axis',
	        axisPointer : {
	            type : 'shadow'
	        }
	    },
	    grid: {
	        left: 80,
	        right: 15,
	        bottom: 10,
	        containLabel: true
	    },
	    xAxis : [
	        {
	            type : 'category',
	            data : massifNames
	        }
	    ],
	    yAxis : [
	        {
	            type : 'value',
	            nameTextStyle: {fontSize: 20},
	            name: '地块完成节点百分比（%）'
	        }
	    ],
	    series : series
	};
	g_echartStat.clear();	
	g_echartStat.setOption(option);
	
	var html=[];
	html.push('<div class="legend-item">');
	html.push('<div class="float-left legend" style="background:#F00"></div>');
	html.push('<div class="float-right">节点完成率小于30%</div>');
	html.push('</div>');
	html.push('<div class="legend-item">');
	html.push('<div class="float-left legend" style="background:#00F"></div>');
	html.push('<div class="float-right">节点完成率在30%与70%之间</div>');
	html.push('</div>');
	html.push('<div class="legend-item">');
	html.push('<div class="float-left legend" style="background:#0F0"></div>');
	html.push('<div class="float-right">节点完成率大于70%</div>');
	html.push('</div>');
	$('#legend').html(html.join(''));
}

function showFacility(active){
	if (active){
		if (g_facilities.length == 0){
			$.ajax({
				type : "post",
				url : '${urlhead}/ajax.html?ajax=getFacility',
				dataType : 'json',
				timeout : 10000,
				success : function(msg, status) {
					if (msg.status == 200) {
						if (null != msg.rows){
							addFacilities(msg.rows);
						}
					}else{
						showError(msg.msg);
					}
				},
				error: function(){
					showError('网络访问失败！');
				}
			});		
		}else{
			g_map.add(g_facilities);
		}
	}else{
		g_map.remove(g_facilities);
	}
}
function addFacilities(rows){
	for(var i=0;i<rows.length;i++){
		var info = rows[i];
		if (info.iLocType == 2){
			var pts = eval('('+info.cPolygon+')');
			var colorIndex = 0;
			for(var k=0;k<typeColors.length;k++){
				if (typeColors[k].type == info.cCategory){
					colorIndex = typeColors[k].colorno;
					break;
				}
			}
			var color = getIndexColor(colorIndex);
			var polygon = new AMap.Polygon({
		        path: pts,			//设置多边形边界路径
		        strokeColor: color, //线颜色
		        strokeOpacity: 0.6, 	//线透明度
		        strokeWeight: 2,    	//线宽
		        fillColor: color, 	//填充色
		        fillOpacity: 1,		//填充透明度
		        bubble: true,
				extData: info
		    });
			polygon.setMap(g_map);
			
			polygon.on('click',function(e){
				var data = this.getExtData();
				var html=[];
				html.push('<div class="infowindow">');
				html.push('<div class="infotitle">'+data.cName+'</div>');
				html.push('<div class="infoline">类型：'+ data.cType + '</div>');
				html.push('<div class="infoline">规模：'+ data.cScale + '</div>');
				html.push('<div class="infoline">提交时间：'+ data.dtCreate + '</div>');
				html.push('<div class="infoline">说明：'+ data.cRemark + '</div>');
				html.push('</div>');
				showInfoWindow(e.lnglat,html.join(''),new AMap.Pixel(0,0));
			});
			g_facilities.push(polygon);
		}else if (info.iLocType == 1){
			var ptMarker = new AMap.Marker({
				position: [info.fLng,info.fLat],
				title: info.cName,
				icon: "images/circle-blue-16.png",
				offset: new AMap.Pixel(-8,-8),
				extData: info
			});
			ptMarker.setMap(g_map);
			g_facilities.push(ptMarker);
			
			ptMarker.on('click',function(){
				var data = this.getExtData();
				var curPt = this.getPosition();
				var html=[];
				html.push('<div class="infowindow">');
				html.push('<div class="infotitle">'+data.cName+'</div>');
				html.push('<div class="infoline">类型：'+ data.cType + '</div>');
				html.push('<div class="infoline">规模：'+ data.cScale + '</div>');
				html.push('<div class="infoline">提交时间：'+ data.dtCreate + '</div>');
				html.push('<div class="infoline">地址：'+ data.cAddr + '</div>');
				html.push('<div class="infoline">坐标：');
				html.push(curPt.getLng()+' , '+curPt.getLat());
				html.push('</div>');
				html.push('<div class="infoline">说明：'+ data.cRemark + '</div>');
				html.push('</div>');
				showInfoWindow(curPt,html.join(''),new AMap.Pixel(0,-8));
			});	
		}
	}
}
function showHousePrice(active){
	if (active){
		if (g_housePrices.length == 0){
			$.ajax({
				type : "post",
				url : '${urlhead}/ajax.html?ajax=getHouse',
				dataType : 'json',
				timeout : 10000,
				success : function(msg, status) {
					if (msg.status == 200) {
						if (null != msg.rows){
							for(var i=0;i<msg.rows.length;i++){
								addHousePrice(msg.rows[i]);
							}
						}
					}else{
						showError(msg.msg);
					}
				},
				error: function(){
					showError('网络访问失败！');
				}
			});		
		}else{
			g_map.add(g_housePrices);
		}
	}else{
		g_map.remove(g_housePrices);
	}
}
function addHousePrice(info){
	var ptMarker = new AMap.Marker({
		position: [info.fLng,info.fLat],
		title: info.cName,
		extData: info
	});
	ptMarker.setTop(true);
	ptMarker.setMap(g_map);
	g_housePrices.push(ptMarker);
	
	ptMarker.on('click',function(){
		var data = this.getExtData();
		var curPt = this.getPosition();
		var html=[];
		html.push('<div class="infotitle">'+data.cName+'</div>');
		html.push('<div class="infoline">用途：'+ data.cUsage + '</div>');
		html.push('<div class="infoline">距离：'+ data.iDist + '米</div>');
		html.push('<div class="infoline">开盘性质：'+ (data.isNew==1?'新开盘':'二手房') + '</div>');
		html.push('<div class="infoline">开盘日期：'+ data.dtOpen + '</div>');
		html.push('<div class="infoline">使用年限：'+ data.iUseYear + '</div>');
		html.push('<div class="infoline">租售性质：'+ (data.isRent==1?'租赁':'销售') + '</div>');
		html.push('<div class="infoline">开盘价：'+ data.fOpenPrice + '</div>');
		html.push('<div class="infoline">当前价：'+ data.fCurPrice + '</div>');
		if (data.cUsage != '工业'){
			html.push('<div class="infoline">类型：'+ data.cType + '</div>');
		}
		html.push('<div class="infoline">坐标：');
		html.push(curPt.getLng()+' , '+curPt.getLat());
		html.push('</div>');
		html.push('<div class="infoline">位置：'+ data.cAddr + '</div>');
		showInfoWindow(curPt,html.join(''),new AMap.Pixel(0,-30));
	});	
}
</script>

</html>
